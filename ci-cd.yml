name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: ordersdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      # Backend build & test
      - name: Restore dependencies
        run: dotnet restore ./backend

      - name: Build backend
        run: dotnet build ./backend --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ./backend --no-build --verbosity normal

      # Setup Node for frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Frontend build
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/order-api:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/order-api:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/order-ui:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/order-ui:latest
